<?php

/**
 * @throws Exception
 */
function validate_time($time) {
    if (preg_match(TIME_FORMAT, $time) == 0) {
        throw new Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.");
    }
    $hours_minutes = mb_split(TIME_SEPARATOR, $time);
    $hours = intval($hours_minutes[0]);
    $minutes = intval($hours_minutes[1]);
    if ($hours >= 24 || $minutes >= 60) {
        throw new Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.");
    }
}

/**
 * @throws Exception
 */
function validate_ids($ids) {
    if (preg_match(IDS_FORMAT, $ids) == 0) {
        throw new Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
    }
}

/**
 * @throws Exception
 */
function validate_date($date) {
    if (preg_match(DATE_FORMAT, $date) == 0) {
        throw new Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.");
    }
    $day_month_year = mb_split(DATE_SEPARATOR, $date);
    $day = intval($day_month_year[0]);
    $month = intval($day_month_year[1]);
    if ($day > 31 || $month > 12) {
        throw new Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.");
    }
}

/**
 * @throws Exception
 */
function validate_error($error) {
    if (preg_match(DUPLICATE_ERROR, $error)) {
        throw new Exception("–≠—Ç–∞ –∑–∞–ø–∏—Å—å —É–∂–µ –µ—Å—Ç—å –≤ —Ç–≤–æ—ë–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.");
    } elseif (preg_match(NOT_REGISTERED_ERROR, $error)) {
        throw new Exception("–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–∞–ø–∏—à–∏ \"–ù–∞—á–∞—Ç—å\", —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ.");
    } elseif (preg_match(WRONG_DATE_ERROR, $error)) {
        throw new Exception("–¢–∞–∫–æ–π –¥–∞—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç üòî");
    } else { // our failure
        log_error($error);
        throw new Exception("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.");
    }
}
/**
 * @throws Exception
 */
function validate_day_of_week($day_of_week): int {
    switch ($day_of_week) {
        case '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        case '–ø–Ω':
            return 1;
        case '–≤—Ç–æ—Ä–Ω–∏–∫':
        case '–≤—Ç':
            return 2;
        case '—Å—Ä–µ–¥–∞':
        case '—Å—Ä':
            return 3;
        case '—á–µ—Ç–≤–µ—Ä–≥':
        case '—á—Ç':
            return 4;
        case '–ø—è—Ç–Ω–∏—Ü–∞':
        case '–ø—Ç':
            return 5;
        case '—Å—É–±–±–æ—Ç–∞':
        case '—Å–±':
            return 6;
        case '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        case '–≤—Å':
            return 7;
        default:
            throw new Exception("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–Ω—è –Ω–µ–¥–µ–ª–∏.");
    }
}